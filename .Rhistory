library(devtools)
load_all()
load_all()
BeautyR::emboss("tmp/test_input.jpg", "tmp/test_output.jpg")
exists("emboss", where = ".GlobalEnv", inherits = FALSE)
document()
?emboss
exists("emboss", where = ".GlobalEnv", inherits = FALSE)
load_all()
exists("emboss", where = ".GlobalEnv", inherits = FALSE)
?emboss
load_all()
library(devtools)
devtools::load_all(".")
load_all()
?emboss
??emboss
exists("fbind", where = ".GlobalEnv", inherits = FALSE)
exists("emboss", where = ".GlobalEnv", inherits = FALSE)
library(devtools)
(a <- factor(c("character", "hits", "your", "eyeballs")))
(b <- factor(c("but", "integer", "where it", "counts")))
load_all()
fbind(a, b)
load_all()
exists("emboss", where = ".GlobalEnv", inherits = FALSE)
exists("fbind", where = ".GlobalEnv", inherits = FALSE)
fbind(a, b)
emboss("tmp/test_input.jpg", "tmp/test_output.jpg")
emboss("tmp/test_input.jpg", "tmp/test_output.jpg")
library(testit)
install.packages("testit")
load_all()
emboss("tmp/test_input.jpg", "tmp/test_output.jpg")
emboss("tmp/Google-logo.jpg", "tmp/Google-logo_emboss.jpg")
emboss("tmp/Google-logo.jpg", "tmp/Google-logo_emboss.jpg")
emboss("tmp/dtrump.jpg", "tmp/dtrump_emboss.jpg")
BeautyR::emboss("tmp/Google-logo.jpg", "tmp/Google-logo_emboss.jpg")
emboss("tmp/dtrump.jpg", 123)
library(jpeg)
getwd()
print(readJPEG("tests/testthat/test_imgs/emboss/test_input.jpg"))
tmp <- readJPEG("tests/testthat/test_imgs/emboss/test_input.jpg")
dim(tmp)
print(as.numeric(tmp))
tmp2 <- array(tmp, dim=c(6, 6, 3))
dim(tmp2)
class(tmp2)
print(tmp2)
print(as.character(tmp))
tmp3 <- round(tmp*255, 0)
print(tmp3)
print(readJPEG("tests/testthat/test_imgs/emboss/test_output.jpg"))
load_all()
load_all()
getwd()
Rscript tests/testthat/test_emboss.R
getwd()
emboss("img/Google-logo.jpg", "img/Google-logo_emboss.jpg")
load_all()
emboss("img/Google-logo.jpg", "img/Google-logo_emboss.jpg")
getwd()
test_that("The image is not correctly embossed", {
emboss(test_input_file_path, test_output_file_path)
test_output <- readJPEG(test_output_file_path)
expect_equal(test_output, exp_output, tolerance=1e-2)
})
# initiate file paths
test_input_file_path <- c("test_imgs/emboss/test_input.jpg")
test_output_file_path <- c("test_imgs/emboss/test_output.jpg")
# prepare test input image array
test_input <- array(c(c(162, 157, 165, 157, 147, 158,
169, 174, 172, 164, 165, 161,
166, 171, 171, 171, 168, 182,
168, 168, 168, 162, 165, 175,
177, 175, 166, 167, 173, 175,
175, 174, 169, 160, 158, 160),
c(116, 108, 109,  97,  89, 102,
121, 122, 114, 104, 105, 103,
114, 118, 113, 111, 110, 124,
115, 115, 112, 106, 109, 119,
124, 122, 115, 116, 122, 122,
122, 123, 120, 113, 110, 109),
c(101,  94,  96,  86,  77,  89,
107, 109, 102,  93,  94,  91,
101, 104, 101, 100,  96, 110,
101, 101,  99,  91,  94, 104,
110, 108,  98,  99, 105, 106,
108, 106, 103,  95,  90,  90)),
dim=c(6, 6, 3))
# save test input image matrix as a file on computer
writeJPEG(test_input, test_input_file_path, quality = 1)
# prepare expected output image matrix
exp_output <- array(c(c(0.5294118, 0.5215686, 0.5450980, 0.5607843,
0.6078431, 0.6156863, 0.5764706, 0.6039216,
0.6235294, 0.5568627, 0.5019608, 0.5254902,
0.4470588, 0.4117647, 0.3764706, 0.4352941),
c(0.5294118, 0.5215686, 0.5450980, 0.5607843,
0.6078431, 0.6156863, 0.5764706, 0.6039216,
0.6235294, 0.5568627, 0.5019608, 0.5254902,
0.4470588, 0.4117647, 0.3764706, 0.4352941),
c(0.5294118, 0.5215686, 0.5450980, 0.5607843,
0.6078431, 0.6156863, 0.5764706, 0.6039216,
0.6235294, 0.5568627, 0.5019608, 0.5254902,
0.4470588, 0.4117647, 0.3764706, 0.4352941)),
dim=c(4, 4, 3))
test_that("The image is not correctly embossed", {
emboss(test_input_file_path, test_output_file_path)
test_output <- readJPEG(test_output_file_path)
print(test_output)
expect_equal(test_output, exp_output, tolerance=1e-2)
})
library(jpeg)
test_input <- array(c(c(162, 157, 165, 157, 147, 158,
169, 174, 172, 164, 165, 161,
166, 171, 171, 171, 168, 182,
168, 168, 168, 162, 165, 175,
177, 175, 166, 167, 173, 175,
175, 174, 169, 160, 158, 160),
c(116, 108, 109,  97,  89, 102,
121, 122, 114, 104, 105, 103,
114, 118, 113, 111, 110, 124,
115, 115, 112, 106, 109, 119,
124, 122, 115, 116, 122, 122,
122, 123, 120, 113, 110, 109),
c(101,  94,  96,  86,  77,  89,
107, 109, 102,  93,  94,  91,
101, 104, 101, 100,  96, 110,
101, 101,  99,  91,  94, 104,
110, 108,  98,  99, 105, 106,
108, 106, 103,  95,  90,  90)),
dim=c(6, 6, 3))
print(test_input)
load_all()
emboss("tests/testthat/test_imgs/emboss/test_input.jpg", "tests/testthat/test_imgs/emboss/test_output.jpg")
print(read("tests/testthat/test_imgs/emboss/test_output.jpg"))
print(readJPEG("tests/testthat/test_imgs/emboss/test_output.jpg"))
library(BeautyR)
library(BeautyR)
getwd()
emboss("tests/testthat/test_imgs/emboss/test_input.jpg", "tests/testthat/test_imgs/emboss/test_output.jpg")
print(readJPEG("tests/testthat/test_imgs/emboss/test_output.jpg"))
getwd()
devtools::test()
expect_error(1 / "a", "non-numeric argument")
expect_error(1 / 2, "non-numeric argument")
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
emboss("./img/hello.jpg", "./img/world.jpg")
emboss("./img/hello.jpg", "./img/world.jpg")
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
emboss("./img/hello.jpg", "./img/world.jpg")
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
emboss(test_input_file_path, "./tests/hello/world_emboss.ppt")
emboss("./test_imgs/emboss/test_input.jpg", "./tests/hello/world_emboss.ppt")
emboss(".tests/testthat/test_imgs/emboss/test_input.jpg", "./tests/hello/world_emboss.ppt")
emboss("./tests/testthat/test_imgs/emboss/test_input.jpg", "./tests/hello/world_emboss.ppt")
emboss(99999, "./tests/testthat/test_imgs/emboss/test_input.jpg")
emboss("./tests/testthat/test_imgs/emboss/test_input.jpg", 99999)
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
emboss("./tests/emboss/test_input.jpg", "./tests/emboss/test_input.jpg")
emboss(99999, "./tests/testthat/test_imgs/emboss/test_input.jpg")
emboss("Hello", "./tests/testthat/test_imgs/emboss/test_input.jpg")
source('C:/Users/leiju/OneDrive/UBC-MDS_repos/BeautyR/R/emboss.R', echo=TRUE)
emboss("Hello", "./tests/testthat/test_imgs/emboss/test_input.jpg")
emboss("./tests/testthat/test_imgs/emboss/test_input.jpg", 99999)
emboss("./tests/testthat/test_imgs/emboss/test_input.jpg", "99999")
emboss("./tests/testthat/test_imgs/emboss/test_input.jpg", "/hello/99999")
install.packages("DT")
devtools::use_mit_license()
usethis::use_mit_license("Gilbert Lei, Jessie Yu, Olivia Lin")
test()
devtools::install_github("UBC-MDS/BeautyR", build_vignettes = TRUE)
library(BeautyR)
emboss("img/Google-logo.jpg", "img/Google-logo_emboss2.jpg")
